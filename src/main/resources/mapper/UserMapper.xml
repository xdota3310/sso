<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lr.sso.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.lr.sso.model.dto.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="qq" property="qq" jdbcType="VARCHAR"/>
        <result column="we_chat" property="weChat" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="TypeResultMap" type="com.lr.sso.model.dto.UserInfo" extends="BaseResultMap">
        <result column="type_name" property="typeName" jdbcType="VARCHAR"></result>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_name, create_time, modify_time, phone, qq, we_chat, password, email, type
  </sql>
    <select id="selectByPrimaryKey" resultMap="TypeResultMap" parameterType="com.lr.sso.model.dto.User">
        select
        u.id, u.user_name, u.create_time, u.modify_time, u.phone, u.qq, u.we_chat, u.password, u.email,
        u.type,ut.type_name
        from user u,user_type ut
        where
        <if test="id != null">
            u.id = #{id,jdbcType=INTEGER}
        </if>
        <if test="userName != null">
            u.user_name = #{userName,jdbcType=VARCHAR}
        </if>
        <if test="email != null">
            u.email = #{email,jdbcType=VARCHAR}
        </if>
        <if test="phone != null">
            u.phone = #{phone,jdbcType=VARCHAR}
        </if>
        and
        u.type = ut.id

    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.lr.sso.model.dto.User">
    insert into user (id, user_name, create_time, 
      modify_time, phone, qq, 
      we_chat, password, email, 
      type)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{phone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{weChat,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.lr.sso.model.dto.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="weChat != null">
                we_chat,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="weChat != null">
                #{weChat,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lr.sso.model.dto.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="weChat != null">
                we_chat = #{weChat,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lr.sso.model.dto.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      we_chat = #{weChat,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>